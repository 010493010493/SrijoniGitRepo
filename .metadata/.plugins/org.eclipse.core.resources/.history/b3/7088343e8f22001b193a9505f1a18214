package com.ibm.currencyconvertservice.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ibm.currencyconvertservice.dto.CurrencyDTO;
import com.ibm.currencyconvertservice.entity.Currency;
import com.ibm.currencyconvertservice.service.CurrencyConverterService;


@RequestMapping("currency")
@RestController
public class CurrencyConversionController {
	
	@Autowired
	CurrencyConverterService service;
	
	Logger logger = LoggerFactory.getLogger(CurrencyConversionController.class);
	
	@PostMapping("/create")
	public ResponseEntity<Currency> createCurrency(@RequestBody CurrencyDTO dto) {
		
		return ResponseEntity.status(HttpStatus.CREATED).body(service.createCurrency(dto));

}
	
	@PutMapping("/update/{id}")
	public ResponseEntity<Currency> updateCurrency(@PathVariable(value="id")Long id,@RequestBody CurrencyDTO dto) {
		
		return ResponseEntity.status(HttpStatus.OK).body(service.updateCurrency(dto,id));

}
	
	@GetMapping("/get/{id}") 
	public ResponseEntity<Currency> getCurrency(@PathVariable(value="id")Long id,@RequestParam(value="countryCode")String code) {
		try {
		Currency currency = service.getCurrency(id,code);
		return ResponseEntity.status(HttpStatus.OK).body(currency); 
	} catch(Exception e) {
		return ResponseEntity.status(HttpStatus.NO_CONTENT).build(); 
	}
	}
	
	@GetMapping("/amount/{id}") 
	public Double getAmount(@PathVariable(value="id")Long id,@RequestParam(value="countryCode")String code) {
		Currency currency;
		try {
		currency = service.getCurrency(id,code);
		
	} catch(Exception e) {
		logger.error(e.getMessage());
	}
		return currency.getConversionFactor();
	}
}
